"""
Django settings for infiniteshop project.

Generated by 'django-admin startproject' using Django 2.2.12.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
from django.utils.translation import ugettext_lazy as _
from oscar.defaults import *

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'vh$85)rp)s*&jo1yt_pcv6=3#r+4jjuk8(-!tk6ye@6-$_@m%+'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'django.contrib.sites',
    'django.contrib.flatpages',

    'oscar',
    'oscar.apps.analytics',
    'oscar.apps.checkout',
    'oscar.apps.address',
    'oscar.apps.shipping',
    'oscar.apps.catalogue',
    'oscar.apps.catalogue.reviews',
    'oscar.apps.partner',
    'oscar.apps.basket',
    'oscar.apps.payment',
    'oscar.apps.offer',
    'oscar.apps.order',
    'oscar.apps.customer',
    'oscar.apps.search',
    'oscar.apps.voucher',
    'oscar.apps.wishlists',
    'oscar.apps.dashboard',
    'oscar.apps.dashboard.reports',
    'oscar.apps.dashboard.users',
    'oscar.apps.dashboard.orders',
    'oscar.apps.dashboard.catalogue',
    'oscar.apps.dashboard.offers',
    'oscar.apps.dashboard.partners',
    'oscar.apps.dashboard.pages',
    'oscar.apps.dashboard.ranges',
    'oscar.apps.dashboard.reviews',
    'oscar.apps.dashboard.vouchers',
    'oscar.apps.dashboard.communications',
    'oscar.apps.dashboard.shipping',

    # 3rd-party apps that oscar depends on
    'widget_tweaks',
    'haystack',
    'treebeard',
    'sorl.thumbnail',
    'django_tables2',
]

SITE_ID = 1

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    # oscar middleware
    'oscar.apps.basket.middleware.BasketMiddleware',
    'django.contrib.flatpages.middleware.FlatpageFallbackMiddleware',
]

ROOT_URLCONF = 'infiniteshop.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                # oscars context processors
                'oscar.apps.search.context_processors.search_form',
                'oscar.apps.checkout.context_processors.checkout',
                'oscar.apps.customer.notifications.context_processors.notifications',
                'oscar.core.context_processors.metadata',
            ],
        },
    },
]

WSGI_APPLICATION = 'infiniteshop.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'

# Haystack connection
HAYSTACK_CONNECTIONS = {
    'default': {
        'ENGINE': 'haystack.backends.simple_backend.SimpleEngine',
    },
}


DEFAULT_FROM_EMAIL = "Infinite Cipher <no-reply@infinitecipher.com>"


# OSCAR SETTINGS
OSCAR_SHOP_NAME = "Infinite Cipher Ecommerce Starter Kit"
OSCAR_SHOP_TAGLINE = "Development"
OSCAR_DEFAULT_CURRENCY = 'KWD'
OSCAR_CURRENCY_FORMAT = {
    'KWD': {
        'currency_digits': False,
        'format_type': "accounting",
        'format': u'Â¤\xa0#,##0.000',
    },
}

OSCAR_FROM_EMAIL = DEFAULT_FROM_EMAIL

# allow anonymous user for checkout
OSCAR_ALLOW_ANON_CHECKOUT = True

# Oscar extended profile
# AUTH_PROFILE_MODULE = "customaccount.Profile"

# Order statuses
OSCAR_STATUS_NEW = 'new'  # status of new orders.
ORDER_STATUS_PAID = 'paid'  # order that is paid
ORDER_STATUS_CANCELLED = 'cancelled'  # order that is cancelled. # in this situation cancelling order transfer the user refund to his wallet.
ORDER_STATUS_CLOSED = 'closed'  # order that doesnt need any further actions.

# # Pipeline Config

# Order statuses
OSCAR_INITIAL_ORDER_STATUS = OSCAR_STATUS_NEW  # The main object
OSCAR_INITIAL_LINE_STATUS = OSCAR_STATUS_NEW   # The individual lines
OSCARAPI_INITIAL_ORDER_STATUS = OSCAR_STATUS_NEW

OSCAR_ORDER_STATUS_PIPELINE = {
    OSCAR_STATUS_NEW: (ORDER_STATUS_PAID, ORDER_STATUS_CANCELLED, ORDER_STATUS_CLOSED),
    ORDER_STATUS_PAID: (ORDER_STATUS_CANCELLED, ORDER_STATUS_CLOSED),
    ORDER_STATUS_CANCELLED: (),
    ORDER_STATUS_CLOSED: (),
}

# order line status
OSCAR_LINE_STATUS_PIPELINE = OSCAR_ORDER_STATUS_PIPELINE  # for template just cascade everything to the line

# cascading status from order to line
OSCAR_ORDER_STATUS_CASCADE = {
    OSCAR_STATUS_NEW: OSCAR_STATUS_NEW,
    ORDER_STATUS_PAID: ORDER_STATUS_PAID,
    ORDER_STATUS_CANCELLED: ORDER_STATUS_CANCELLED,
    ORDER_STATUS_CLOSED: ORDER_STATUS_CLOSED,
}

ORDER_STATUS_DISPLAY_NAME = {
    OSCAR_STATUS_NEW: _("Initiated"),
    ORDER_STATUS_PAID: _("Order paid"),
    ORDER_STATUS_CANCELLED: _("Cancelled"),
    ORDER_STATUS_CLOSED: _("Closed"),
}

